import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Product {
    private int id;
    private String name;
    private double price;

    public Product(int id, String name, double price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }
}

class ProductCRUD {
    private List<Product> products;
    private int nextId;

    public ProductCRUD() {
        products = new ArrayList<>();
        nextId = 1;
    }

    public void createProduct(String name, double price) {
        Product product = new Product(nextId, name, price);
        products.add(product);
        nextId++;
        System.out.println("Product created successfully.");
    }

    public void readProduct(int id) {
        for (Product product : products) {
            if (product.getId() == id) {
                System.out.println("Product found:");
                System.out.println("ID: " + product.getId());
                System.out.println("Name: " + product.getName());
                System.out.println("Price: " + product.getPrice());
                return;
            }
        }
        System.out.println("Product not found.");
    }

    public void updateProduct(int id, String name, double price) {
        for (Product product : products) {
            if (product.getId() == id) {
                product.setName(name);
                product.setPrice(price);
                System.out.println("Product updated successfully.");
                return;
            }
        }
        System.out.println("Product not found.");
    }

    public void deleteProduct(int id) {
        for (int i = 0; i < products.size(); i++) {
            if (products.get(i).getId() == id) {
                products.remove(i);
                System.out.println("Product deleted successfully.");
                return;
            }
        }
        System.out.println("Product not found.");
    }
}

public class CRUDApplication {
    public static void main(String[] args) {
        ProductCRUD productCRUD = new ProductCRUD();
        productCRUD.createProduct("Product 1", 10.99);
        productCRUD.createProduct("Product 2", 15.99);

        Scanner scanner = new Scanner(System.in);
        int choice;
        do {
            System.out.println("\n--- CRUD Application Menu ---");
            System.out.println("1. Create a product");
            System.out.println("2. Read a product");
            System.out.println("3. Update a product");
            System.out.println("4. Delete a product");
            System.out.println("0. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter product name: ");
                    scanner.nextLine(); // Consume the newline character
                    String name = scanner.nextLine();
                    System.out.print("Enter product price: ");
                    double price = scanner.nextDouble();
                    productCRUD.createProduct(name, price);
                    break;
                case 2:
                    System.out.print("Enter product ID: ");
                    int readId = scanner.nextInt();
                    productCRUD.readProduct(readId);
                    break;
                case 3:
                    System.out.print("Enter product ID: ");
                    int updateId = scanner.nextInt();
                    System.out.print("Enter new product name: ");
                    scanner.nextLine(); // Consume the newline character
                    String newName = scanner.nextLine();
                    System.out.print("Enter new product price: ");
                    double newPrice = scanner.nextDouble();
                    productCRUD.updateProduct(updateId, newName, newPrice);
                    break;
                case 4:
                    System.out.print("Enter product ID: ");
                    int deleteId = scanner.nextInt();
                    productCRUD.deleteProduct(deleteId);
                    break;
                case 0:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid choice. Try again.");
                    break;
            }
        } while (choice != 0);

        scanner.close();
    }
}
